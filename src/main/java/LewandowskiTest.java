// Generated by Selenium IDE
import org.junit.Assert;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
public class LewandowskiTest {
    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;
    @Before
    public void setUp() {
        driver = new ChromeDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }
    @After
    public void tearDown() {
        driver.quit();
    }
    @Test
    public void lewandowski() {
        // Test name: lewandowski
        // Step # | name | target | value | comment
        // 1 | open | /wiki/Blog |  |
        driver.get("https://en.wikipedia.org/wiki/Blog");
        // 2 | setWindowSize | 1920x1051 |  |
        driver.manage().window().setSize(new Dimension(1920, 1051));
        // 3 | click | id=searchInput |  |
        driver.findElement(By.id("searchInput")).click();
        // 4 | type | id=searchInput | lewandowski |
        driver.findElement(By.id("searchInput")).sendKeys("lewandowski");
//        // 5 | click | css=.suggestions-result-current > .highlight |  |
//        driver.findElement(By.cssSelector(".suggestions-result-current > .highlight")).click();
        // 6 | click | css=.tocsection-1 .toctext |  |
        driver.findElement(By.cssSelector(".tocsection-1 .toctext")).click();
        // 7 | click | css=.tocsection-3 .toctext |  |
        driver.findElement(By.cssSelector(".tocsection-3 .toctext")).click();
//        // 8 | click | css=ul:nth-child(8) > li:nth-child(3) |  |
//        driver.findElement(By.cssSelector("ul:nth-child(8) > li:nth-child(3)")).click();
//        // 9 | click | css=.mwe-popups-extract > p |  |
//        driver.findElement(By.cssSelector(".mwe-popups-extract > p")).click();

        Assert.assertEquals("Blog - Wikipedia" , driver.getTitle());
    }
}
